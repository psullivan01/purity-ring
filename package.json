{
  "name": "purity-ring",
  "version": "1.0.0",
  "main": "dist/cjs/index.cjs",
  "module": "dist/esm/index.js",
  "type": "module",
  "description": "Purity Ring sanitizes usernames by intelligently splitting concatenated strings, substituting numbers and special characters for their alphabetic equivalents, and checking the results against a customizable blacklist to ensure appropriateness.",
  "scripts": {
    "start": "DEBUG=true npm run build && node dist/esm/index.js",
    "start-cjs": "npm run build && node dist/cjs/index.cjs",
    "build": "rollup -c && copyfiles -f 'src/data/**/*' dist/data",
    "test": "jest --coverage --verbose",
    "test:file": "fn() { jest $1 --coverage --verbose --collectCoverageFrom \"**/*/$1.ts\" --watch;}; fn",
    "lint": "eslint .",
    "format": "prettier --write .",
    "script": "fn() { node ./scripts/$1; }; fn",
    "prepare": "husky install",
    "pack": "npm run build && npm run rename-cjs && npm run rename-require-cjs && npm pack",
    "rename-cjs": "find dist/cjs -name '*.js' -exec bash -c 'mv \"$0\" \"${0%.js}.cjs\"' {} \\;",
    "rename-require-cjs": "find dist/cjs -name '*.cjs' -exec sed -i '' 's/require(\\\"\\(.*\\)\\.js\\\")/require(\\\"\\1.cjs\\\")/g' {} \\;"
  },
  "keywords": [
    "username",
    "usernames",
    "sanitization",
    "string splitting",
    "leet speak",
    "leet",
    "character mapping",
    "blacklist",
    "profanity",
    "data cleaning",
    "text processing",
    "nlp",
    "natural language processing",
    "validation",
    "regex"
  ],
  "author": {
    "name": "Patrick Sullivan",
    "email": "prsullivan5@gmail.com",
    "url": "https://github.com/psullivan01"
  },
  "repository": "https://github.com/psullivan01/purity-ring",
  "license": "MIT",
  "devDependencies": {
    "@eslint/js": "^9.9.0",
    "@rollup/plugin-commonjs": "^26.0.1",
    "@rollup/plugin-node-resolve": "^15.2.3",
    "@rollup/plugin-typescript": "^11.1.6",
    "@types/jest": "^29.5.12",
    "@types/node": "^22.5.1",
    "@typescript-eslint/eslint-plugin": "^8.3.0",
    "@typescript-eslint/parser": "^8.3.0",
    "copyfiles": "^2.4.1",
    "csv-parser": "^3.0.0",
    "eslint": "^9.9.1",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.2.1",
    "globals": "^15.9.0",
    "husky": "^8.0.0",
    "jest": "^29.7.0",
    "lzma-native": "^8.0.6",
    "prettier": "^3.3.3",
    "rollup": "^2.79.1",
    "rollup-plugin-terser": "^7.0.2",
    "ts-jest": "^29.2.5",
    "ts-jest-mock-import-meta": "^1.2.0",
    "typescript": "^5.5.4"
  },
  "jest": {
    "preset": "ts-jest/presets/default-esm",
    "testEnvironment": "node",
    "collectCoverage": true,
    "coverageDirectory": "coverage/",
    "modulePaths": [
      "<rootDir>/src"
    ],
    "collectCoverageFrom": [
      "src/**/*.ts"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 100,
        "functions": 100,
        "lines": 100,
        "statements": 100
      }
    },
    "testMatch": [
      "**/src/**/*.test.ts"
    ],
    "extensionsToTreatAsEsm": [
      ".ts"
    ],
    "moduleNameMapper": {
      "^(\\.{1,2}/.*)\\.js$": "$1"
    },
    "transform": {
      "^.+\\.ts?$": [
        "ts-jest",
        {
          "diagnostics": {
            "ignoreCodes": [
              1343
            ]
          },
          "astTransformers": {
            "before": [
              {
                "path": "node_modules/ts-jest-mock-import-meta",
                "options": {
                  "metaObjectReplacement": {
                    "url": "file:https://www.url.com"
                  }
                }
              }
            ]
          }
        }
      ]
    }
  },
  "exports": {
    ".": {
      "require": "./dist/cjs/index.cjs",
      "import": "./dist/esm/index.js"
    }
  },
  "files": [
    "dist/**/*.cjs",
    "dist/**/*.js",
    "dist/**/*.d.ts",
    "dist/data/*.json*",
    "README.md",
    "LICENSE"
  ]
}
